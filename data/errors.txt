ArithmeticError: A base class for errors related to arithmetic operations (like division or overflow).

AssertionError: Raised when an assert statement fails.

AttributeError: Raised when an object does not have the attribute you tried to access.

BaseException: Base class for all built-in exceptions.
Not meant to be caught directly.

BaseExceptionGroup: Groups multiple unrelated exceptions into one, introduced in Python 3.11.

BlockingIOError: Raised when an operation would block on an object (like a non-blocking socket).

BrokenPipeError: Occurs when trying to write to a pipe that has been closed on the other end.

BufferError: Raised when a buffer-related operation cannot be performed.

BytesWarning: Warning about operations that implicitly convert bytes to/from strings.

ChildProcessError: Raised when an operation on a child process fails.

ConnectionAbortedError: Connection was aborted by the peer.

ConnectionError: Base class for connection-related errors.

ConnectionRefusedError: Raised when a connection attempt is refused.

ConnectionResetError: Connection was reset by the peer.

DeprecationWarning: Warns about features that are deprecated and may be removed.

EOFError: Raised when input() hits an end-of-file condition (no more input).

EncodingWarning: Warns about potential encoding issues.

EnvironmentError: Alias for OSError.
Raised for system-related errors.

Exception: Base class for all standard exceptions.

ExceptionGroup: Holds multiple exceptions that occurred together (Python 3.11+).

FileExistsError: Trying to create a file or directory that already exists.

FileNotFoundError: Trying to access a file that does not exist.

FloatingPointError: Raised for errors in floating point calculations.

FutureWarning: Warns about features that will change in the future.

GeneratorExit: Raised when a generator or coroutine is closed.

IOError: Alias for OSError.
Input/output operation failure.

ImportError: Python cannot find or load the specified module.

ImportWarning: Warns about potential issues with imports.

IndentationError: Incorrect indentation in Python code.

IndexError: List or tuple index out of range.

InterruptedError: A system call was interrupted.

IsADirectoryError: Tried to operate on a directory as if it were a file.

KeyError: Dictionary key not found.

KeyboardInterrupt: Raised when the user presses Ctrl+C to stop a program.

LookupError: Base class for IndexError and KeyError.

MemoryError: Not enough memory to perform an operation.

ModuleNotFoundError: Raised when an imported module cannot be found.

NameError: Trying to use a variable that hasn’t been defined.

NotADirectoryError: A file was used where a directory was expected.

NotImplementedError: Raised when an abstract method or feature is not implemented.

OSError: Generic system-related error.

OverflowError: Result of a numeric operation is too large to be represented.

PendingDeprecationWarning: Warns about deprecated features that will change in the future.

PermissionError: Trying to perform an operation without the necessary permissions.

ProcessLookupError: Trying to operate on a process that doesn’t exist.

RecursionError: Too many recursive function calls (stack overflow).

ReferenceError: Trying to access a deleted object via weak reference.

ResourceWarning: Warns about resource usage, like open files.

RuntimeError: Generic error not covered by other types.

RuntimeWarning: Warns about issues that don’t stop the program but might be problematic.

StopAsyncIteration: Raised to signal the end of an asynchronous iterator.

StopIteration: Raised to signal the end of an iterator.

SyntaxError: Your code has a syntax problem.

SyntaxWarning: Warns about suspicious syntax.

SystemError: Python itself has encountered an internal error.

SystemExit: Raised by sys.exit(), used to stop the program.

TabError: Incorrect mixture of tabs and spaces in indentation.

TimeoutError: Operation took too long and timed out.

TypeError: Wrong type of object used.

UnboundLocalError: Trying to use a local variable before it has been assigned.

UnicodeDecodeError: Error decoding a byte string into Unicode.

UnicodeEncodeError: Error encoding a Unicode string into bytes.

UnicodeError: Generic Unicode-related error.

UnicodeTranslateError: Error translating Unicode to another encoding.

UnicodeWarning: Warns about possible Unicode issues.

UserWarning: General warning generated by user code.

ValueError: Object has the right type but an inappropriate value.

Warning: Base class for warning categories.

ZeroDivisionError: Trying to divide by zero.